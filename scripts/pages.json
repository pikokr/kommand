[{"name":"GREEDY_PHRASE","description":"io.github.monun.kommand.StringType.GREEDY_PHRASE","location":"kommand-api/io.github.monun.kommand/-string-type/-g-r-e-e-d-y_-p-h-r-a-s-e/index.html","searchKeys":["GREEDY_PHRASE","GREEDY_PHRASE","io.github.monun.kommand.StringType.GREEDY_PHRASE"]},{"name":"LOADED","description":"io.github.monun.kommand.PositionLoadType.LOADED","location":"kommand-api/io.github.monun.kommand/-position-load-type/-l-o-a-d-e-d/index.html","searchKeys":["LOADED","LOADED","io.github.monun.kommand.PositionLoadType.LOADED"]},{"name":"QUOTABLE_PHRASE","description":"io.github.monun.kommand.StringType.QUOTABLE_PHRASE","location":"kommand-api/io.github.monun.kommand/-string-type/-q-u-o-t-a-b-l-e_-p-h-r-a-s-e/index.html","searchKeys":["QUOTABLE_PHRASE","QUOTABLE_PHRASE","io.github.monun.kommand.StringType.QUOTABLE_PHRASE"]},{"name":"SINGLE_WORD","description":"io.github.monun.kommand.StringType.SINGLE_WORD","location":"kommand-api/io.github.monun.kommand/-string-type/-s-i-n-g-l-e_-w-o-r-d/index.html","searchKeys":["SINGLE_WORD","SINGLE_WORD","io.github.monun.kommand.StringType.SINGLE_WORD"]},{"name":"SPAWNABLE","description":"io.github.monun.kommand.PositionLoadType.SPAWNABLE","location":"kommand-api/io.github.monun.kommand/-position-load-type/-s-p-a-w-n-a-b-l-e/index.html","searchKeys":["SPAWNABLE","SPAWNABLE","io.github.monun.kommand.PositionLoadType.SPAWNABLE"]},{"name":"abstract class AbstractKommandSuggestion : KommandSuggestion","description":"io.github.monun.kommand.AbstractKommandSuggestion","location":"kommand-api/io.github.monun.kommand/-abstract-kommand-suggestion/index.html","searchKeys":["AbstractKommandSuggestion","abstract class AbstractKommandSuggestion : KommandSuggestion","io.github.monun.kommand.AbstractKommandSuggestion"]},{"name":"abstract fun <T> dynamic(type: StringType = StringType.SINGLE_WORD, function: KommandSource.(context: KommandContext, input: String) -> T?): KommandArgument<T>","description":"io.github.monun.kommand.KommandArgumentSupport.dynamic","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/dynamic.html","searchKeys":["dynamic","abstract fun <T> dynamic(type: StringType = StringType.SINGLE_WORD, function: KommandSource.(context: KommandContext, input: String) -> T?): KommandArgument<T>","io.github.monun.kommand.KommandArgumentSupport.dynamic"]},{"name":"abstract fun <T> suggest(candidates: Iterable<T>, transform: (T) -> String, tooltip: (T) -> ComponentLike? = null)","description":"io.github.monun.kommand.KommandSuggestion.suggest","location":"kommand-api/io.github.monun.kommand/-kommand-suggestion/suggest.html","searchKeys":["suggest","abstract fun <T> suggest(candidates: Iterable<T>, transform: (T) -> String, tooltip: (T) -> ComponentLike? = null)","io.github.monun.kommand.KommandSuggestion.suggest"]},{"name":"abstract fun <T> suggest(candidates: Map<String, T>, tooltip: (T) -> ComponentLike? = null)","description":"io.github.monun.kommand.KommandSuggestion.suggest","location":"kommand-api/io.github.monun.kommand/-kommand-suggestion/suggest.html","searchKeys":["suggest","abstract fun <T> suggest(candidates: Map<String, T>, tooltip: (T) -> ComponentLike? = null)","io.github.monun.kommand.KommandSuggestion.suggest"]},{"name":"abstract fun advancement(): KommandArgument<Advancement>","description":"io.github.monun.kommand.KommandArgumentSupport.advancement","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/advancement.html","searchKeys":["advancement","abstract fun advancement(): KommandArgument<Advancement>","io.github.monun.kommand.KommandArgumentSupport.advancement"]},{"name":"abstract fun angle(): KommandArgument<Float>","description":"io.github.monun.kommand.KommandArgumentSupport.angle","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/angle.html","searchKeys":["angle","abstract fun angle(): KommandArgument<Float>","io.github.monun.kommand.KommandArgumentSupport.angle"]},{"name":"abstract fun applyTo(entity: Entity): Vector","description":"io.github.monun.kommand.wrapper.EntityAnchor.applyTo","location":"kommand-api/io.github.monun.kommand.wrapper/-entity-anchor/apply-to.html","searchKeys":["applyTo","abstract fun applyTo(entity: Entity): Vector","io.github.monun.kommand.wrapper.EntityAnchor.applyTo"]},{"name":"abstract fun applyTo(source: KommandSource): Vector","description":"io.github.monun.kommand.wrapper.EntityAnchor.applyTo","location":"kommand-api/io.github.monun.kommand.wrapper/-entity-anchor/apply-to.html","searchKeys":["applyTo","abstract fun applyTo(source: KommandSource): Vector","io.github.monun.kommand.wrapper.EntityAnchor.applyTo"]},{"name":"abstract fun blockPosition(type: PositionLoadType = PositionLoadType.LOADED): KommandArgument<BlockPosition3D>","description":"io.github.monun.kommand.KommandArgumentSupport.blockPosition","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/block-position.html","searchKeys":["blockPosition","abstract fun blockPosition(type: PositionLoadType = PositionLoadType.LOADED): KommandArgument<BlockPosition3D>","io.github.monun.kommand.KommandArgumentSupport.blockPosition"]},{"name":"abstract fun blockPosition2D(): KommandArgument<BlockPosition2D>","description":"io.github.monun.kommand.KommandArgumentSupport.blockPosition2D","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/block-position2-d.html","searchKeys":["blockPosition2D","abstract fun blockPosition2D(): KommandArgument<BlockPosition2D>","io.github.monun.kommand.KommandArgumentSupport.blockPosition2D"]},{"name":"abstract fun blockPredicate(): KommandArgument<(Block) -> Boolean>","description":"io.github.monun.kommand.KommandArgumentSupport.blockPredicate","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/block-predicate.html","searchKeys":["blockPredicate","abstract fun blockPredicate(): KommandArgument<(Block) -> Boolean>","io.github.monun.kommand.KommandArgumentSupport.blockPredicate"]},{"name":"abstract fun blockState(): KommandArgument<BlockData>","description":"io.github.monun.kommand.KommandArgumentSupport.blockState","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/block-state.html","searchKeys":["blockState","abstract fun blockState(): KommandArgument<BlockData>","io.github.monun.kommand.KommandArgumentSupport.blockState"]},{"name":"abstract fun bool(): KommandArgument<Boolean>","description":"io.github.monun.kommand.KommandArgumentSupport.bool","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/bool.html","searchKeys":["bool","abstract fun bool(): KommandArgument<Boolean>","io.github.monun.kommand.KommandArgumentSupport.bool"]},{"name":"abstract fun color(): KommandArgument<TextColor>","description":"io.github.monun.kommand.KommandArgumentSupport.color","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/color.html","searchKeys":["color","abstract fun color(): KommandArgument<TextColor>","io.github.monun.kommand.KommandArgumentSupport.color"]},{"name":"abstract fun component(): KommandArgument<Component>","description":"io.github.monun.kommand.KommandArgumentSupport.component","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/component.html","searchKeys":["component","abstract fun component(): KommandArgument<Component>","io.github.monun.kommand.KommandArgumentSupport.component"]},{"name":"abstract fun compoundTag(): KommandArgument<JsonObject>","description":"io.github.monun.kommand.KommandArgumentSupport.compoundTag","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/compound-tag.html","searchKeys":["compoundTag","abstract fun compoundTag(): KommandArgument<JsonObject>","io.github.monun.kommand.KommandArgumentSupport.compoundTag"]},{"name":"abstract fun dimension(): KommandArgument<World>","description":"io.github.monun.kommand.KommandArgumentSupport.dimension","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/dimension.html","searchKeys":["dimension","abstract fun dimension(): KommandArgument<World>","io.github.monun.kommand.KommandArgumentSupport.dimension"]},{"name":"abstract fun displaySlot(): KommandArgument<DisplaySlot>","description":"io.github.monun.kommand.KommandArgumentSupport.displaySlot","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/display-slot.html","searchKeys":["displaySlot","abstract fun displaySlot(): KommandArgument<DisplaySlot>","io.github.monun.kommand.KommandArgumentSupport.displaySlot"]},{"name":"abstract fun double(minimum: Double = -Double.MAX_VALUE, maximum: Double = Double.MAX_VALUE): KommandArgument<Double>","description":"io.github.monun.kommand.KommandArgumentSupport.double","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/double.html","searchKeys":["double","abstract fun double(minimum: Double = -Double.MAX_VALUE, maximum: Double = Double.MAX_VALUE): KommandArgument<Double>","io.github.monun.kommand.KommandArgumentSupport.double"]},{"name":"abstract fun doubleRange(): KommandArgument<ClosedFloatingPointRange<Double>>","description":"io.github.monun.kommand.KommandArgumentSupport.doubleRange","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/double-range.html","searchKeys":["doubleRange","abstract fun doubleRange(): KommandArgument<ClosedFloatingPointRange<Double>>","io.github.monun.kommand.KommandArgumentSupport.doubleRange"]},{"name":"abstract fun enchantment(): KommandArgument<Enchantment>","description":"io.github.monun.kommand.KommandArgumentSupport.enchantment","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/enchantment.html","searchKeys":["enchantment","abstract fun enchantment(): KommandArgument<Enchantment>","io.github.monun.kommand.KommandArgumentSupport.enchantment"]},{"name":"abstract fun entities(): KommandArgument<Collection<Entity>>","description":"io.github.monun.kommand.KommandArgumentSupport.entities","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/entities.html","searchKeys":["entities","abstract fun entities(): KommandArgument<Collection<Entity>>","io.github.monun.kommand.KommandArgumentSupport.entities"]},{"name":"abstract fun entity(): KommandArgument<Entity>","description":"io.github.monun.kommand.KommandArgumentSupport.entity","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/entity.html","searchKeys":["entity","abstract fun entity(): KommandArgument<Entity>","io.github.monun.kommand.KommandArgumentSupport.entity"]},{"name":"abstract fun entityAnchor(): KommandArgument<EntityAnchor>","description":"io.github.monun.kommand.KommandArgumentSupport.entityAnchor","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/entity-anchor.html","searchKeys":["entityAnchor","abstract fun entityAnchor(): KommandArgument<EntityAnchor>","io.github.monun.kommand.KommandArgumentSupport.entityAnchor"]},{"name":"abstract fun entityAnchorEyes(): EntityAnchor","description":"io.github.monun.kommand.wrapper.WrapperSupport.entityAnchorEyes","location":"kommand-api/io.github.monun.kommand.wrapper/-wrapper-support/entity-anchor-eyes.html","searchKeys":["entityAnchorEyes","abstract fun entityAnchorEyes(): EntityAnchor","io.github.monun.kommand.wrapper.WrapperSupport.entityAnchorEyes"]},{"name":"abstract fun entityAnchorFeet(): EntityAnchor","description":"io.github.monun.kommand.wrapper.WrapperSupport.entityAnchorFeet","location":"kommand-api/io.github.monun.kommand.wrapper/-wrapper-support/entity-anchor-feet.html","searchKeys":["entityAnchorFeet","abstract fun entityAnchorFeet(): EntityAnchor","io.github.monun.kommand.wrapper.WrapperSupport.entityAnchorFeet"]},{"name":"abstract fun executes(executes: KommandSource.(KommandContext) -> Unit)","description":"io.github.monun.kommand.node.KommandNode.executes","location":"kommand-api/io.github.monun.kommand.node/-kommand-node/executes.html","searchKeys":["executes","abstract fun executes(executes: KommandSource.(KommandContext) -> Unit)","io.github.monun.kommand.node.KommandNode.executes"]},{"name":"abstract fun float(minimum: Float = -Float.MAX_VALUE, maximum: Float = Float.MAX_VALUE): KommandArgument<Float>","description":"io.github.monun.kommand.KommandArgumentSupport.float","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/float.html","searchKeys":["float","abstract fun float(minimum: Float = -Float.MAX_VALUE, maximum: Float = Float.MAX_VALUE): KommandArgument<Float>","io.github.monun.kommand.KommandArgumentSupport.float"]},{"name":"abstract fun function(): KommandArgument<() -> Unit>","description":"io.github.monun.kommand.KommandArgumentSupport.function","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/function.html","searchKeys":["function","abstract fun function(): KommandArgument<() -> Unit>","io.github.monun.kommand.KommandArgumentSupport.function"]},{"name":"abstract fun hasPermission(level: Int): Boolean","description":"io.github.monun.kommand.KommandSource.hasPermission","location":"kommand-api/io.github.monun.kommand/-kommand-source/has-permission.html","searchKeys":["hasPermission","abstract fun hasPermission(level: Int): Boolean","io.github.monun.kommand.KommandSource.hasPermission"]},{"name":"abstract fun hasPermission(level: Int, bukkitPermission: String): Boolean","description":"io.github.monun.kommand.KommandSource.hasPermission","location":"kommand-api/io.github.monun.kommand/-kommand-source/has-permission.html","searchKeys":["hasPermission","abstract fun hasPermission(level: Int, bukkitPermission: String): Boolean","io.github.monun.kommand.KommandSource.hasPermission"]},{"name":"abstract fun int(minimum: Int = Int.MIN_VALUE, maximum: Int = Int.MAX_VALUE): KommandArgument<Int>","description":"io.github.monun.kommand.KommandArgumentSupport.int","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/int.html","searchKeys":["int","abstract fun int(minimum: Int = Int.MIN_VALUE, maximum: Int = Int.MAX_VALUE): KommandArgument<Int>","io.github.monun.kommand.KommandArgumentSupport.int"]},{"name":"abstract fun intRange(): KommandArgument<IntRange>","description":"io.github.monun.kommand.KommandArgumentSupport.intRange","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/int-range.html","searchKeys":["intRange","abstract fun intRange(): KommandArgument<IntRange>","io.github.monun.kommand.KommandArgumentSupport.intRange"]},{"name":"abstract fun item(): KommandArgument<ItemStack>","description":"io.github.monun.kommand.KommandArgumentSupport.item","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/item.html","searchKeys":["item","abstract fun item(): KommandArgument<ItemStack>","io.github.monun.kommand.KommandArgumentSupport.item"]},{"name":"abstract fun itemPredicate(): KommandArgument<(ItemStack) -> Boolean>","description":"io.github.monun.kommand.KommandArgumentSupport.itemPredicate","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/item-predicate.html","searchKeys":["itemPredicate","abstract fun itemPredicate(): KommandArgument<(ItemStack) -> Boolean>","io.github.monun.kommand.KommandArgumentSupport.itemPredicate"]},{"name":"abstract fun long(minimum: Long = Long.MIN_VALUE, maximum: Long = Long.MAX_VALUE): KommandArgument<Long>","description":"io.github.monun.kommand.KommandArgumentSupport.long","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/long.html","searchKeys":["long","abstract fun long(minimum: Long = Long.MIN_VALUE, maximum: Long = Long.MAX_VALUE): KommandArgument<Long>","io.github.monun.kommand.KommandArgumentSupport.long"]},{"name":"abstract fun message(): KommandArgument<Component>","description":"io.github.monun.kommand.KommandArgumentSupport.message","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/message.html","searchKeys":["message","abstract fun message(): KommandArgument<Component>","io.github.monun.kommand.KommandArgumentSupport.message"]},{"name":"abstract fun mobEffect(): KommandArgument<PotionEffectType>","description":"io.github.monun.kommand.KommandArgumentSupport.mobEffect","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/mob-effect.html","searchKeys":["mobEffect","abstract fun mobEffect(): KommandArgument<PotionEffectType>","io.github.monun.kommand.KommandArgumentSupport.mobEffect"]},{"name":"abstract fun objective(): KommandArgument<Objective>","description":"io.github.monun.kommand.KommandArgumentSupport.objective","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/objective.html","searchKeys":["objective","abstract fun objective(): KommandArgument<Objective>","io.github.monun.kommand.KommandArgumentSupport.objective"]},{"name":"abstract fun objectiveCriteria(): KommandArgument<String>","description":"io.github.monun.kommand.KommandArgumentSupport.objectiveCriteria","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/objective-criteria.html","searchKeys":["objectiveCriteria","abstract fun objectiveCriteria(): KommandArgument<String>","io.github.monun.kommand.KommandArgumentSupport.objectiveCriteria"]},{"name":"abstract fun particle(): KommandArgument<Particle>","description":"io.github.monun.kommand.KommandArgumentSupport.particle","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/particle.html","searchKeys":["particle","abstract fun particle(): KommandArgument<Particle>","io.github.monun.kommand.KommandArgumentSupport.particle"]},{"name":"abstract fun player(): KommandArgument<Player>","description":"io.github.monun.kommand.KommandArgumentSupport.player","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/player.html","searchKeys":["player","abstract fun player(): KommandArgument<Player>","io.github.monun.kommand.KommandArgumentSupport.player"]},{"name":"abstract fun players(): KommandArgument<Collection<Player>>","description":"io.github.monun.kommand.KommandArgumentSupport.players","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/players.html","searchKeys":["players","abstract fun players(): KommandArgument<Collection<Player>>","io.github.monun.kommand.KommandArgumentSupport.players"]},{"name":"abstract fun position(): KommandArgument<Position3D>","description":"io.github.monun.kommand.KommandArgumentSupport.position","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/position.html","searchKeys":["position","abstract fun position(): KommandArgument<Position3D>","io.github.monun.kommand.KommandArgumentSupport.position"]},{"name":"abstract fun position2D(): KommandArgument<Position2D>","description":"io.github.monun.kommand.KommandArgumentSupport.position2D","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/position2-d.html","searchKeys":["position2D","abstract fun position2D(): KommandArgument<Position2D>","io.github.monun.kommand.KommandArgumentSupport.position2D"]},{"name":"abstract fun profile(): KommandArgument<Collection<PlayerProfile>>","description":"io.github.monun.kommand.KommandArgumentSupport.profile","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/profile.html","searchKeys":["profile","abstract fun profile(): KommandArgument<Collection<PlayerProfile>>","io.github.monun.kommand.KommandArgumentSupport.profile"]},{"name":"abstract fun recipe(): KommandArgument<Recipe>","description":"io.github.monun.kommand.KommandArgumentSupport.recipe","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/recipe.html","searchKeys":["recipe","abstract fun recipe(): KommandArgument<Recipe>","io.github.monun.kommand.KommandArgumentSupport.recipe"]},{"name":"abstract fun register(plugin: Plugin, name: String, vararg aliases: String, init: RootNode.() -> Unit): KommandDispatcher","description":"io.github.monun.kommand.Kommand.register","location":"kommand-api/io.github.monun.kommand/-kommand/register.html","searchKeys":["register","abstract fun register(plugin: Plugin, name: String, vararg aliases: String, init: RootNode.() -> Unit): KommandDispatcher","io.github.monun.kommand.Kommand.register"]},{"name":"abstract fun requires(requires: KommandSource.() -> Boolean)","description":"io.github.monun.kommand.node.KommandNode.requires","location":"kommand-api/io.github.monun.kommand.node/-kommand-node/requires.html","searchKeys":["requires","abstract fun requires(requires: KommandSource.() -> Boolean)","io.github.monun.kommand.node.KommandNode.requires"]},{"name":"abstract fun rotation(): KommandArgument<Rotation>","description":"io.github.monun.kommand.KommandArgumentSupport.rotation","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/rotation.html","searchKeys":["rotation","abstract fun rotation(): KommandArgument<Rotation>","io.github.monun.kommand.KommandArgumentSupport.rotation"]},{"name":"abstract fun score(): KommandArgument<String>","description":"io.github.monun.kommand.KommandArgumentSupport.score","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/score.html","searchKeys":["score","abstract fun score(): KommandArgument<String>","io.github.monun.kommand.KommandArgumentSupport.score"]},{"name":"abstract fun scores(): KommandArgument<Collection<String>>","description":"io.github.monun.kommand.KommandArgumentSupport.scores","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/scores.html","searchKeys":["scores","abstract fun scores(): KommandArgument<Collection<String>>","io.github.monun.kommand.KommandArgumentSupport.scores"]},{"name":"abstract fun slot(): KommandArgument<Int>","description":"io.github.monun.kommand.KommandArgumentSupport.slot","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/slot.html","searchKeys":["slot","abstract fun slot(): KommandArgument<Int>","io.github.monun.kommand.KommandArgumentSupport.slot"]},{"name":"abstract fun string(type: StringType = StringType.SINGLE_WORD): KommandArgument<String>","description":"io.github.monun.kommand.KommandArgumentSupport.string","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/string.html","searchKeys":["string","abstract fun string(type: StringType = StringType.SINGLE_WORD): KommandArgument<String>","io.github.monun.kommand.KommandArgumentSupport.string"]},{"name":"abstract fun suggest(candidates: Iterable<String>, tooltip: (String) -> ComponentLike? = null)","description":"io.github.monun.kommand.KommandSuggestion.suggest","location":"kommand-api/io.github.monun.kommand/-kommand-suggestion/suggest.html","searchKeys":["suggest","abstract fun suggest(candidates: Iterable<String>, tooltip: (String) -> ComponentLike? = null)","io.github.monun.kommand.KommandSuggestion.suggest"]},{"name":"abstract fun suggest(text: String, tooltip: () -> ComponentLike? = null)","description":"io.github.monun.kommand.KommandSuggestion.suggest","location":"kommand-api/io.github.monun.kommand/-kommand-suggestion/suggest.html","searchKeys":["suggest","abstract fun suggest(text: String, tooltip: () -> ComponentLike? = null)","io.github.monun.kommand.KommandSuggestion.suggest"]},{"name":"abstract fun suggest(value: Int, tooltip: () -> ComponentLike? = null)","description":"io.github.monun.kommand.KommandSuggestion.suggest","location":"kommand-api/io.github.monun.kommand/-kommand-suggestion/suggest.html","searchKeys":["suggest","abstract fun suggest(value: Int, tooltip: () -> ComponentLike? = null)","io.github.monun.kommand.KommandSuggestion.suggest"]},{"name":"abstract fun suggestDefault()","description":"io.github.monun.kommand.KommandSuggestion.suggestDefault","location":"kommand-api/io.github.monun.kommand/-kommand-suggestion/suggest-default.html","searchKeys":["suggestDefault","abstract fun suggestDefault()","io.github.monun.kommand.KommandSuggestion.suggestDefault"]},{"name":"abstract fun suggests(provider: KommandSuggestion.(context: KommandContext) -> Unit)","description":"io.github.monun.kommand.KommandArgument.suggests","location":"kommand-api/io.github.monun.kommand/-kommand-argument/suggests.html","searchKeys":["suggests","abstract fun suggests(provider: KommandSuggestion.(context: KommandContext) -> Unit)","io.github.monun.kommand.KommandArgument.suggests"]},{"name":"abstract fun summonableEntity(): KommandArgument<NamespacedKey>","description":"io.github.monun.kommand.KommandArgumentSupport.summonableEntity","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/summonable-entity.html","searchKeys":["summonableEntity","abstract fun summonableEntity(): KommandArgument<NamespacedKey>","io.github.monun.kommand.KommandArgumentSupport.summonableEntity"]},{"name":"abstract fun swizzle(): KommandArgument<EnumSet<Axis>>","description":"io.github.monun.kommand.KommandArgumentSupport.swizzle","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/swizzle.html","searchKeys":["swizzle","abstract fun swizzle(): KommandArgument<EnumSet<Axis>>","io.github.monun.kommand.KommandArgumentSupport.swizzle"]},{"name":"abstract fun team(): KommandArgument<Team>","description":"io.github.monun.kommand.KommandArgumentSupport.team","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/team.html","searchKeys":["team","abstract fun team(): KommandArgument<Team>","io.github.monun.kommand.KommandArgumentSupport.team"]},{"name":"abstract fun then(argument: Pair<String, KommandArgument<*>>, vararg arguments: Pair<String, KommandArgument<*>>, init: KommandNode.() -> Unit)","description":"io.github.monun.kommand.node.KommandNode.then","location":"kommand-api/io.github.monun.kommand.node/-kommand-node/then.html","searchKeys":["then","abstract fun then(argument: Pair<String, KommandArgument<*>>, vararg arguments: Pair<String, KommandArgument<*>>, init: KommandNode.() -> Unit)","io.github.monun.kommand.node.KommandNode.then"]},{"name":"abstract fun then(name: String, vararg arguments: Pair<String, KommandArgument<*>>, init: KommandNode.() -> Unit)","description":"io.github.monun.kommand.node.KommandNode.then","location":"kommand-api/io.github.monun.kommand.node/-kommand-node/then.html","searchKeys":["then","abstract fun then(name: String, vararg arguments: Pair<String, KommandArgument<*>>, init: KommandNode.() -> Unit)","io.github.monun.kommand.node.KommandNode.then"]},{"name":"abstract fun time(): KommandArgument<Int>","description":"io.github.monun.kommand.KommandArgumentSupport.time","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/time.html","searchKeys":["time","abstract fun time(): KommandArgument<Int>","io.github.monun.kommand.KommandArgumentSupport.time"]},{"name":"abstract fun uuid(): KommandArgument<UUID>","description":"io.github.monun.kommand.KommandArgumentSupport.uuid","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/uuid.html","searchKeys":["uuid","abstract fun uuid(): KommandArgument<UUID>","io.github.monun.kommand.KommandArgumentSupport.uuid"]},{"name":"abstract operator fun <T> get(name: String): T","description":"io.github.monun.kommand.KommandContext.get","location":"kommand-api/io.github.monun.kommand/-kommand-context/get.html","searchKeys":["get","abstract operator fun <T> get(name: String): T","io.github.monun.kommand.KommandContext.get"]},{"name":"abstract override fun requires(requires: KommandSource.() -> Boolean)","description":"io.github.monun.kommand.node.RootNode.requires","location":"kommand-api/io.github.monun.kommand.node/-root-node/requires.html","searchKeys":["requires","abstract override fun requires(requires: KommandSource.() -> Boolean)","io.github.monun.kommand.node.RootNode.requires"]},{"name":"abstract val anchor: EntityAnchor","description":"io.github.monun.kommand.KommandSource.anchor","location":"kommand-api/io.github.monun.kommand/-kommand-source/anchor.html","searchKeys":["anchor","abstract val anchor: EntityAnchor","io.github.monun.kommand.KommandSource.anchor"]},{"name":"abstract val displayName: Component","description":"io.github.monun.kommand.KommandSource.displayName","location":"kommand-api/io.github.monun.kommand/-kommand-source/display-name.html","searchKeys":["displayName","abstract val displayName: Component","io.github.monun.kommand.KommandSource.displayName"]},{"name":"abstract val entity: Entity","description":"io.github.monun.kommand.KommandSource.entity","location":"kommand-api/io.github.monun.kommand/-kommand-source/entity.html","searchKeys":["entity","abstract val entity: Entity","io.github.monun.kommand.KommandSource.entity"]},{"name":"abstract val entityOrNull: Entity?","description":"io.github.monun.kommand.KommandSource.entityOrNull","location":"kommand-api/io.github.monun.kommand/-kommand-source/entity-or-null.html","searchKeys":["entityOrNull","abstract val entityOrNull: Entity?","io.github.monun.kommand.KommandSource.entityOrNull"]},{"name":"abstract val input: String","description":"io.github.monun.kommand.KommandContext.input","location":"kommand-api/io.github.monun.kommand/-kommand-context/input.html","searchKeys":["input","abstract val input: String","io.github.monun.kommand.KommandContext.input"]},{"name":"abstract val location: Location","description":"io.github.monun.kommand.KommandSource.location","location":"kommand-api/io.github.monun.kommand/-kommand-source/location.html","searchKeys":["location","abstract val location: Location","io.github.monun.kommand.KommandSource.location"]},{"name":"abstract val name: String","description":"io.github.monun.kommand.wrapper.EntityAnchor.name","location":"kommand-api/io.github.monun.kommand.wrapper/-entity-anchor/name.html","searchKeys":["name","abstract val name: String","io.github.monun.kommand.wrapper.EntityAnchor.name"]},{"name":"abstract val player: Player","description":"io.github.monun.kommand.KommandSource.player","location":"kommand-api/io.github.monun.kommand/-kommand-source/player.html","searchKeys":["player","abstract val player: Player","io.github.monun.kommand.KommandSource.player"]},{"name":"abstract val playerOrNull: Player?","description":"io.github.monun.kommand.KommandSource.playerOrNull","location":"kommand-api/io.github.monun.kommand/-kommand-source/player-or-null.html","searchKeys":["playerOrNull","abstract val playerOrNull: Player?","io.github.monun.kommand.KommandSource.playerOrNull"]},{"name":"abstract val position: Position3D","description":"io.github.monun.kommand.KommandSource.position","location":"kommand-api/io.github.monun.kommand/-kommand-source/position.html","searchKeys":["position","abstract val position: Position3D","io.github.monun.kommand.KommandSource.position"]},{"name":"abstract val rotation: Rotation","description":"io.github.monun.kommand.KommandSource.rotation","location":"kommand-api/io.github.monun.kommand/-kommand-source/rotation.html","searchKeys":["rotation","abstract val rotation: Rotation","io.github.monun.kommand.KommandSource.rotation"]},{"name":"abstract val sender: CommandSender","description":"io.github.monun.kommand.KommandSource.sender","location":"kommand-api/io.github.monun.kommand/-kommand-source/sender.html","searchKeys":["sender","abstract val sender: CommandSender","io.github.monun.kommand.KommandSource.sender"]},{"name":"abstract val source: KommandSource","description":"io.github.monun.kommand.KommandContext.source","location":"kommand-api/io.github.monun.kommand/-kommand-context/source.html","searchKeys":["source","abstract val source: KommandSource","io.github.monun.kommand.KommandContext.source"]},{"name":"abstract val world: World","description":"io.github.monun.kommand.KommandSource.world","location":"kommand-api/io.github.monun.kommand/-kommand-source/world.html","searchKeys":["world","abstract val world: World","io.github.monun.kommand.KommandSource.world"]},{"name":"abstract var description: String","description":"io.github.monun.kommand.node.RootNode.description","location":"kommand-api/io.github.monun.kommand.node/-root-node/description.html","searchKeys":["description","abstract var description: String","io.github.monun.kommand.node.RootNode.description"]},{"name":"abstract var fallbackPrefix: String","description":"io.github.monun.kommand.node.RootNode.fallbackPrefix","location":"kommand-api/io.github.monun.kommand.node/-root-node/fallback-prefix.html","searchKeys":["fallbackPrefix","abstract var fallbackPrefix: String","io.github.monun.kommand.node.RootNode.fallbackPrefix"]},{"name":"abstract var usage: String","description":"io.github.monun.kommand.node.RootNode.usage","location":"kommand-api/io.github.monun.kommand.node/-root-node/usage.html","searchKeys":["usage","abstract var usage: String","io.github.monun.kommand.node.RootNode.usage"]},{"name":"annotation class KommandDSL","description":"io.github.monun.kommand.KommandDSL","location":"kommand-api/io.github.monun.kommand/-kommand-d-s-l/index.html","searchKeys":["KommandDSL","annotation class KommandDSL","io.github.monun.kommand.KommandDSL"]},{"name":"class PluginKommand","description":"io.github.monun.kommand.PluginKommand","location":"kommand-api/io.github.monun.kommand/-plugin-kommand/index.html","searchKeys":["PluginKommand","class PluginKommand","io.github.monun.kommand.PluginKommand"]},{"name":"class Rotation(val yaw: Float, val pitch: Float)","description":"io.github.monun.kommand.wrapper.Rotation","location":"kommand-api/io.github.monun.kommand.wrapper/-rotation/index.html","searchKeys":["Rotation","class Rotation(val yaw: Float, val pitch: Float)","io.github.monun.kommand.wrapper.Rotation"]},{"name":"constructor()","description":"io.github.monun.kommand.AbstractKommandSuggestion.AbstractKommandSuggestion","location":"kommand-api/io.github.monun.kommand/-abstract-kommand-suggestion/-abstract-kommand-suggestion.html","searchKeys":["AbstractKommandSuggestion","constructor()","io.github.monun.kommand.AbstractKommandSuggestion.AbstractKommandSuggestion"]},{"name":"constructor(x: Double, y: Double, z: Double)","description":"io.github.monun.kommand.wrapper.Position3D.Position3D","location":"kommand-api/io.github.monun.kommand.wrapper/-position3-d/-position3-d.html","searchKeys":["Position3D","constructor(x: Double, y: Double, z: Double)","io.github.monun.kommand.wrapper.Position3D.Position3D"]},{"name":"constructor(x: Double, z: Double)","description":"io.github.monun.kommand.wrapper.Position2D.Position2D","location":"kommand-api/io.github.monun.kommand.wrapper/-position2-d/-position2-d.html","searchKeys":["Position2D","constructor(x: Double, z: Double)","io.github.monun.kommand.wrapper.Position2D.Position2D"]},{"name":"constructor(x: Int, y: Int, z: Int)","description":"io.github.monun.kommand.wrapper.BlockPosition3D.BlockPosition3D","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position3-d/-block-position3-d.html","searchKeys":["BlockPosition3D","constructor(x: Int, y: Int, z: Int)","io.github.monun.kommand.wrapper.BlockPosition3D.BlockPosition3D"]},{"name":"constructor(x: Int, z: Int)","description":"io.github.monun.kommand.wrapper.BlockPosition2D.BlockPosition2D","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position2-d/-block-position2-d.html","searchKeys":["BlockPosition2D","constructor(x: Int, z: Int)","io.github.monun.kommand.wrapper.BlockPosition2D.BlockPosition2D"]},{"name":"constructor(yaw: Float, pitch: Float)","description":"io.github.monun.kommand.wrapper.Rotation.Rotation","location":"kommand-api/io.github.monun.kommand.wrapper/-rotation/-rotation.html","searchKeys":["Rotation","constructor(yaw: Float, pitch: Float)","io.github.monun.kommand.wrapper.Rotation.Rotation"]},{"name":"data class BlockPosition2D(val x: Int, val z: Int)","description":"io.github.monun.kommand.wrapper.BlockPosition2D","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position2-d/index.html","searchKeys":["BlockPosition2D","data class BlockPosition2D(val x: Int, val z: Int)","io.github.monun.kommand.wrapper.BlockPosition2D"]},{"name":"data class BlockPosition3D(val x: Int, val y: Int, val z: Int)","description":"io.github.monun.kommand.wrapper.BlockPosition3D","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position3-d/index.html","searchKeys":["BlockPosition3D","data class BlockPosition3D(val x: Int, val y: Int, val z: Int)","io.github.monun.kommand.wrapper.BlockPosition3D"]},{"name":"data class Position2D(val x: Double, val z: Double)","description":"io.github.monun.kommand.wrapper.Position2D","location":"kommand-api/io.github.monun.kommand.wrapper/-position2-d/index.html","searchKeys":["Position2D","data class Position2D(val x: Double, val z: Double)","io.github.monun.kommand.wrapper.Position2D"]},{"name":"data class Position3D(val x: Double, val y: Double, val z: Double)","description":"io.github.monun.kommand.wrapper.Position3D","location":"kommand-api/io.github.monun.kommand.wrapper/-position3-d/index.html","searchKeys":["Position3D","data class Position3D(val x: Double, val y: Double, val z: Double)","io.github.monun.kommand.wrapper.Position3D"]},{"name":"enum PositionLoadType : Enum<PositionLoadType> ","description":"io.github.monun.kommand.PositionLoadType","location":"kommand-api/io.github.monun.kommand/-position-load-type/index.html","searchKeys":["PositionLoadType","enum PositionLoadType : Enum<PositionLoadType> ","io.github.monun.kommand.PositionLoadType"]},{"name":"enum StringType : Enum<StringType> ","description":"io.github.monun.kommand.StringType","location":"kommand-api/io.github.monun.kommand/-string-type/index.html","searchKeys":["StringType","enum StringType : Enum<StringType> ","io.github.monun.kommand.StringType"]},{"name":"fun <T> weak(referent: T): WeakReference<T>","description":"io.github.monun.kommand.ref.weak","location":"kommand-api/io.github.monun.kommand.ref/weak.html","searchKeys":["weak","fun <T> weak(referent: T): WeakReference<T>","io.github.monun.kommand.ref.weak"]},{"name":"fun Plugin.kommand(init: PluginKommand.() -> Unit)","description":"io.github.monun.kommand.kommand","location":"kommand-api/io.github.monun.kommand/kommand.html","searchKeys":["kommand","fun Plugin.kommand(init: PluginKommand.() -> Unit)","io.github.monun.kommand.kommand"]},{"name":"fun Rotation.toDirection(): Vector","description":"io.github.monun.kommand.wrapper.toDirection","location":"kommand-api/io.github.monun.kommand.wrapper/to-direction.html","searchKeys":["toDirection","fun Rotation.toDirection(): Vector","io.github.monun.kommand.wrapper.toDirection"]},{"name":"fun register(name: String, vararg aliases: String, init: RootNode.() -> Unit): KommandDispatcher","description":"io.github.monun.kommand.PluginKommand.register","location":"kommand-api/io.github.monun.kommand/-plugin-kommand/register.html","searchKeys":["register","fun register(name: String, vararg aliases: String, init: RootNode.() -> Unit): KommandDispatcher","io.github.monun.kommand.PluginKommand.register"]},{"name":"fun toBlock(world: World): Block","description":"io.github.monun.kommand.wrapper.BlockPosition3D.toBlock","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position3-d/to-block.html","searchKeys":["toBlock","fun toBlock(world: World): Block","io.github.monun.kommand.wrapper.BlockPosition3D.toBlock"]},{"name":"fun toLocation(world: World?, rotation: Rotation): Location","description":"io.github.monun.kommand.wrapper.Position3D.toLocation","location":"kommand-api/io.github.monun.kommand.wrapper/-position3-d/to-location.html","searchKeys":["toLocation","fun toLocation(world: World?, rotation: Rotation): Location","io.github.monun.kommand.wrapper.Position3D.toLocation"]},{"name":"fun toLocation(world: World?, yaw: Float, pitch: Float): Location","description":"io.github.monun.kommand.wrapper.Position3D.toLocation","location":"kommand-api/io.github.monun.kommand.wrapper/-position3-d/to-location.html","searchKeys":["toLocation","fun toLocation(world: World?, yaw: Float, pitch: Float): Location","io.github.monun.kommand.wrapper.Position3D.toLocation"]},{"name":"fun valueOf(value: String): PositionLoadType","description":"io.github.monun.kommand.PositionLoadType.valueOf","location":"kommand-api/io.github.monun.kommand/-position-load-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PositionLoadType","io.github.monun.kommand.PositionLoadType.valueOf"]},{"name":"fun valueOf(value: String): StringType","description":"io.github.monun.kommand.StringType.valueOf","location":"kommand-api/io.github.monun.kommand/-string-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StringType","io.github.monun.kommand.StringType.valueOf"]},{"name":"fun values(): Array<PositionLoadType>","description":"io.github.monun.kommand.PositionLoadType.values","location":"kommand-api/io.github.monun.kommand/-position-load-type/values.html","searchKeys":["values","fun values(): Array<PositionLoadType>","io.github.monun.kommand.PositionLoadType.values"]},{"name":"fun values(): Array<StringType>","description":"io.github.monun.kommand.StringType.values","location":"kommand-api/io.github.monun.kommand/-string-type/values.html","searchKeys":["values","fun values(): Array<StringType>","io.github.monun.kommand.StringType.values"]},{"name":"fun withY(y: Double): Position3D","description":"io.github.monun.kommand.wrapper.Position2D.withY","location":"kommand-api/io.github.monun.kommand.wrapper/-position2-d/with-y.html","searchKeys":["withY","fun withY(y: Double): Position3D","io.github.monun.kommand.wrapper.Position2D.withY"]},{"name":"fun withY(y: Int): BlockPosition3D","description":"io.github.monun.kommand.wrapper.BlockPosition2D.withY","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position2-d/with-y.html","searchKeys":["withY","fun withY(y: Int): BlockPosition3D","io.github.monun.kommand.wrapper.BlockPosition2D.withY"]},{"name":"interface ArgumentNode : KommandNode","description":"io.github.monun.kommand.node.ArgumentNode","location":"kommand-api/io.github.monun.kommand.node/-argument-node/index.html","searchKeys":["ArgumentNode","interface ArgumentNode : KommandNode","io.github.monun.kommand.node.ArgumentNode"]},{"name":"interface EntityAnchor","description":"io.github.monun.kommand.wrapper.EntityAnchor","location":"kommand-api/io.github.monun.kommand.wrapper/-entity-anchor/index.html","searchKeys":["EntityAnchor","interface EntityAnchor","io.github.monun.kommand.wrapper.EntityAnchor"]},{"name":"interface Kommand","description":"io.github.monun.kommand.Kommand","location":"kommand-api/io.github.monun.kommand/-kommand/index.html","searchKeys":["Kommand","interface Kommand","io.github.monun.kommand.Kommand"]},{"name":"interface KommandArgument<T>","description":"io.github.monun.kommand.KommandArgument","location":"kommand-api/io.github.monun.kommand/-kommand-argument/index.html","searchKeys":["KommandArgument","interface KommandArgument<T>","io.github.monun.kommand.KommandArgument"]},{"name":"interface KommandArgumentSupport","description":"io.github.monun.kommand.KommandArgumentSupport","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/index.html","searchKeys":["KommandArgumentSupport","interface KommandArgumentSupport","io.github.monun.kommand.KommandArgumentSupport"]},{"name":"interface KommandContext","description":"io.github.monun.kommand.KommandContext","location":"kommand-api/io.github.monun.kommand/-kommand-context/index.html","searchKeys":["KommandContext","interface KommandContext","io.github.monun.kommand.KommandContext"]},{"name":"interface KommandDispatcher","description":"io.github.monun.kommand.KommandDispatcher","location":"kommand-api/io.github.monun.kommand/-kommand-dispatcher/index.html","searchKeys":["KommandDispatcher","interface KommandDispatcher","io.github.monun.kommand.KommandDispatcher"]},{"name":"interface KommandNode : KommandArgumentSupport","description":"io.github.monun.kommand.node.KommandNode","location":"kommand-api/io.github.monun.kommand.node/-kommand-node/index.html","searchKeys":["KommandNode","interface KommandNode : KommandArgumentSupport","io.github.monun.kommand.node.KommandNode"]},{"name":"interface KommandSource","description":"io.github.monun.kommand.KommandSource","location":"kommand-api/io.github.monun.kommand/-kommand-source/index.html","searchKeys":["KommandSource","interface KommandSource","io.github.monun.kommand.KommandSource"]},{"name":"interface KommandSuggestion","description":"io.github.monun.kommand.KommandSuggestion","location":"kommand-api/io.github.monun.kommand/-kommand-suggestion/index.html","searchKeys":["KommandSuggestion","interface KommandSuggestion","io.github.monun.kommand.KommandSuggestion"]},{"name":"interface LiteralNode : KommandNode","description":"io.github.monun.kommand.node.LiteralNode","location":"kommand-api/io.github.monun.kommand.node/-literal-node/index.html","searchKeys":["LiteralNode","interface LiteralNode : KommandNode","io.github.monun.kommand.node.LiteralNode"]},{"name":"interface RootNode : KommandNode","description":"io.github.monun.kommand.node.RootNode","location":"kommand-api/io.github.monun.kommand.node/-root-node/index.html","searchKeys":["RootNode","interface RootNode : KommandNode","io.github.monun.kommand.node.RootNode"]},{"name":"interface WrapperSupport","description":"io.github.monun.kommand.wrapper.WrapperSupport","location":"kommand-api/io.github.monun.kommand.wrapper/-wrapper-support/index.html","searchKeys":["WrapperSupport","interface WrapperSupport","io.github.monun.kommand.wrapper.WrapperSupport"]},{"name":"object Companion","description":"io.github.monun.kommand.KommandArgumentSupport.Companion","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/-companion/index.html","searchKeys":["Companion","object Companion","io.github.monun.kommand.KommandArgumentSupport.Companion"]},{"name":"object Companion","description":"io.github.monun.kommand.wrapper.EntityAnchor.Companion","location":"kommand-api/io.github.monun.kommand.wrapper/-entity-anchor/-companion/index.html","searchKeys":["Companion","object Companion","io.github.monun.kommand.wrapper.EntityAnchor.Companion"]},{"name":"object Companion : Kommand","description":"io.github.monun.kommand.Kommand.Companion","location":"kommand-api/io.github.monun.kommand/-kommand/-companion/index.html","searchKeys":["Companion","object Companion : Kommand","io.github.monun.kommand.Kommand.Companion"]},{"name":"object Companion : KommandArgumentSupport","description":"io.github.monun.kommand.KommandArgument.Companion","location":"kommand-api/io.github.monun.kommand/-kommand-argument/-companion/index.html","searchKeys":["Companion","object Companion : KommandArgumentSupport","io.github.monun.kommand.KommandArgument.Companion"]},{"name":"object Companion : WrapperSupport","description":"io.github.monun.kommand.wrapper.WrapperSupport.Companion","location":"kommand-api/io.github.monun.kommand.wrapper/-wrapper-support/-companion/index.html","searchKeys":["Companion","object Companion : WrapperSupport","io.github.monun.kommand.wrapper.WrapperSupport.Companion"]},{"name":"open fun <T : Enum<T>> dynamicByEnum(set: EnumSet<T>, tooltip: (T) -> ComponentLike? = null): KommandArgument<T>","description":"io.github.monun.kommand.KommandArgumentSupport.dynamicByEnum","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/dynamic-by-enum.html","searchKeys":["dynamicByEnum","open fun <T : Enum<T>> dynamicByEnum(set: EnumSet<T>, tooltip: (T) -> ComponentLike? = null): KommandArgument<T>","io.github.monun.kommand.KommandArgumentSupport.dynamicByEnum"]},{"name":"open fun <T> dynamicByMap(map: Map<String, T>, type: StringType = StringType.SINGLE_WORD, tooltip: (T) -> ComponentLike? = null): KommandArgument<T>","description":"io.github.monun.kommand.KommandArgumentSupport.dynamicByMap","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/dynamic-by-map.html","searchKeys":["dynamicByMap","open fun <T> dynamicByMap(map: Map<String, T>, type: StringType = StringType.SINGLE_WORD, tooltip: (T) -> ComponentLike? = null): KommandArgument<T>","io.github.monun.kommand.KommandArgumentSupport.dynamicByMap"]},{"name":"open fun broadcast(message: ComponentLike, isAudience: CommandSender.() -> Boolean = { isOp })","description":"io.github.monun.kommand.KommandSource.broadcast","location":"kommand-api/io.github.monun.kommand/-kommand-source/broadcast.html","searchKeys":["broadcast","open fun broadcast(message: ComponentLike, isAudience: CommandSender.() -> Boolean = { isOp })","io.github.monun.kommand.KommandSource.broadcast"]},{"name":"open fun feedback(message: ComponentLike)","description":"io.github.monun.kommand.KommandSource.feedback","location":"kommand-api/io.github.monun.kommand/-kommand-source/feedback.html","searchKeys":["feedback","open fun feedback(message: ComponentLike)","io.github.monun.kommand.KommandSource.feedback"]},{"name":"open fun hasPermission(bukkitPermission: String): Boolean","description":"io.github.monun.kommand.KommandSource.hasPermission","location":"kommand-api/io.github.monun.kommand/-kommand-source/has-permission.html","searchKeys":["hasPermission","open fun hasPermission(bukkitPermission: String): Boolean","io.github.monun.kommand.KommandSource.hasPermission"]},{"name":"open operator fun String.invoke(vararg arguments: Pair<String, KommandArgument<*>>, init: KommandNode.() -> Unit)","description":"io.github.monun.kommand.node.KommandNode.invoke","location":"kommand-api/io.github.monun.kommand.node/-kommand-node/invoke.html","searchKeys":["invoke","open operator fun String.invoke(vararg arguments: Pair<String, KommandArgument<*>>, init: KommandNode.() -> Unit)","io.github.monun.kommand.node.KommandNode.invoke"]},{"name":"open override fun suggestDefault()","description":"io.github.monun.kommand.AbstractKommandSuggestion.suggestDefault","location":"kommand-api/io.github.monun.kommand/-abstract-kommand-suggestion/suggest-default.html","searchKeys":["suggestDefault","open override fun suggestDefault()","io.github.monun.kommand.AbstractKommandSuggestion.suggestDefault"]},{"name":"open val isConsole: Boolean","description":"io.github.monun.kommand.KommandSource.isConsole","location":"kommand-api/io.github.monun.kommand/-kommand-source/is-console.html","searchKeys":["isConsole","open val isConsole: Boolean","io.github.monun.kommand.KommandSource.isConsole"]},{"name":"open val isOp: Boolean","description":"io.github.monun.kommand.KommandSource.isOp","location":"kommand-api/io.github.monun.kommand/-kommand-source/is-op.html","searchKeys":["isOp","open val isOp: Boolean","io.github.monun.kommand.KommandSource.isOp"]},{"name":"open val isPlayer: Boolean","description":"io.github.monun.kommand.KommandSource.isPlayer","location":"kommand-api/io.github.monun.kommand/-kommand-source/is-player.html","searchKeys":["isPlayer","open val isPlayer: Boolean","io.github.monun.kommand.KommandSource.isPlayer"]},{"name":"operator fun <T> KommandContext.getValue(thisRef: Any?, property: KProperty<*>): T","description":"io.github.monun.kommand.getValue","location":"kommand-api/io.github.monun.kommand/get-value.html","searchKeys":["getValue","operator fun <T> KommandContext.getValue(thisRef: Any?, property: KProperty<*>): T","io.github.monun.kommand.getValue"]},{"name":"operator fun <T> WeakReference<T>.getValue(thisRef: Any?, property: KProperty<*>): T","description":"io.github.monun.kommand.ref.getValue","location":"kommand-api/io.github.monun.kommand.ref/get-value.html","searchKeys":["getValue","operator fun <T> WeakReference<T>.getValue(thisRef: Any?, property: KProperty<*>): T","io.github.monun.kommand.ref.getValue"]},{"name":"operator fun String.invoke(vararg aliases: String, init: RootNode.() -> Unit): KommandDispatcher","description":"io.github.monun.kommand.PluginKommand.invoke","location":"kommand-api/io.github.monun.kommand/-plugin-kommand/invoke.html","searchKeys":["invoke","operator fun String.invoke(vararg aliases: String, init: RootNode.() -> Unit): KommandDispatcher","io.github.monun.kommand.PluginKommand.invoke"]},{"name":"val EYES: EntityAnchor","description":"io.github.monun.kommand.wrapper.EntityAnchor.Companion.EYES","location":"kommand-api/io.github.monun.kommand.wrapper/-entity-anchor/-companion/-e-y-e-s.html","searchKeys":["EYES","val EYES: EntityAnchor","io.github.monun.kommand.wrapper.EntityAnchor.Companion.EYES"]},{"name":"val FEET: EntityAnchor","description":"io.github.monun.kommand.wrapper.EntityAnchor.Companion.FEET","location":"kommand-api/io.github.monun.kommand.wrapper/-entity-anchor/-companion/-f-e-e-t.html","searchKeys":["FEET","val FEET: EntityAnchor","io.github.monun.kommand.wrapper.EntityAnchor.Companion.FEET"]},{"name":"val INSTANCE: KommandArgumentSupport","description":"io.github.monun.kommand.KommandArgumentSupport.Companion.INSTANCE","location":"kommand-api/io.github.monun.kommand/-kommand-argument-support/-companion/-i-n-s-t-a-n-c-e.html","searchKeys":["INSTANCE","val INSTANCE: KommandArgumentSupport","io.github.monun.kommand.KommandArgumentSupport.Companion.INSTANCE"]},{"name":"val asVector: Vector","description":"io.github.monun.kommand.wrapper.BlockPosition3D.asVector","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position3-d/as-vector.html","searchKeys":["asVector","val asVector: Vector","io.github.monun.kommand.wrapper.BlockPosition3D.asVector"]},{"name":"val asVector: Vector","description":"io.github.monun.kommand.wrapper.Position3D.asVector","location":"kommand-api/io.github.monun.kommand.wrapper/-position3-d/as-vector.html","searchKeys":["asVector","val asVector: Vector","io.github.monun.kommand.wrapper.Position3D.asVector"]},{"name":"val pitch: Float","description":"io.github.monun.kommand.wrapper.Rotation.pitch","location":"kommand-api/io.github.monun.kommand.wrapper/-rotation/pitch.html","searchKeys":["pitch","val pitch: Float","io.github.monun.kommand.wrapper.Rotation.pitch"]},{"name":"val x: Double","description":"io.github.monun.kommand.wrapper.Position2D.x","location":"kommand-api/io.github.monun.kommand.wrapper/-position2-d/x.html","searchKeys":["x","val x: Double","io.github.monun.kommand.wrapper.Position2D.x"]},{"name":"val x: Double","description":"io.github.monun.kommand.wrapper.Position3D.x","location":"kommand-api/io.github.monun.kommand.wrapper/-position3-d/x.html","searchKeys":["x","val x: Double","io.github.monun.kommand.wrapper.Position3D.x"]},{"name":"val x: Int","description":"io.github.monun.kommand.wrapper.BlockPosition2D.x","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position2-d/x.html","searchKeys":["x","val x: Int","io.github.monun.kommand.wrapper.BlockPosition2D.x"]},{"name":"val x: Int","description":"io.github.monun.kommand.wrapper.BlockPosition3D.x","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position3-d/x.html","searchKeys":["x","val x: Int","io.github.monun.kommand.wrapper.BlockPosition3D.x"]},{"name":"val y: Double","description":"io.github.monun.kommand.wrapper.Position3D.y","location":"kommand-api/io.github.monun.kommand.wrapper/-position3-d/y.html","searchKeys":["y","val y: Double","io.github.monun.kommand.wrapper.Position3D.y"]},{"name":"val y: Int","description":"io.github.monun.kommand.wrapper.BlockPosition3D.y","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position3-d/y.html","searchKeys":["y","val y: Int","io.github.monun.kommand.wrapper.BlockPosition3D.y"]},{"name":"val yaw: Float","description":"io.github.monun.kommand.wrapper.Rotation.yaw","location":"kommand-api/io.github.monun.kommand.wrapper/-rotation/yaw.html","searchKeys":["yaw","val yaw: Float","io.github.monun.kommand.wrapper.Rotation.yaw"]},{"name":"val z: Double","description":"io.github.monun.kommand.wrapper.Position2D.z","location":"kommand-api/io.github.monun.kommand.wrapper/-position2-d/z.html","searchKeys":["z","val z: Double","io.github.monun.kommand.wrapper.Position2D.z"]},{"name":"val z: Double","description":"io.github.monun.kommand.wrapper.Position3D.z","location":"kommand-api/io.github.monun.kommand.wrapper/-position3-d/z.html","searchKeys":["z","val z: Double","io.github.monun.kommand.wrapper.Position3D.z"]},{"name":"val z: Int","description":"io.github.monun.kommand.wrapper.BlockPosition2D.z","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position2-d/z.html","searchKeys":["z","val z: Int","io.github.monun.kommand.wrapper.BlockPosition2D.z"]},{"name":"val z: Int","description":"io.github.monun.kommand.wrapper.BlockPosition3D.z","location":"kommand-api/io.github.monun.kommand.wrapper/-block-position3-d/z.html","searchKeys":["z","val z: Int","io.github.monun.kommand.wrapper.BlockPosition3D.z"]},{"name":"var suggestsDefault: Boolean","description":"io.github.monun.kommand.AbstractKommandSuggestion.suggestsDefault","location":"kommand-api/io.github.monun.kommand/-abstract-kommand-suggestion/suggests-default.html","searchKeys":["suggestsDefault","var suggestsDefault: Boolean","io.github.monun.kommand.AbstractKommandSuggestion.suggestsDefault"]}]
